name: Unit Tests (Cross-Platform)

env:
  VCPKG_COMMIT: 3fdbb3d3a8e676ba0204ff2a7b7a09d10b12ef25

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

jobs:
  run-tests:
    name: Run Tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: ${{ env.VCPKG_COMMIT }}
          runVcpkgInstall: true

      - name: Install yaml-cpp
        run: vcpkg install yaml-cpp

      - name: Compile test runner (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Write-Host "Compiling with MSVC..."
          mkdir build
          cd build
          cl ../testing/run-tests.cpp /EHsc /Fe:run-tests.exe `
           /I"${{ github.workspace }}/vcpkg/installed/x64-windows/include" `
           /link /LIBPATH:"${{ github.workspace }}/vcpkg/installed/x64-windows/lib" yaml-cpp.lib

      - name: Compile test runner
        shell: bash
        run: |
          set -e
          mkdir -p build
          cd build
          
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            echo "Compiling with Clang (macOS)..."
            clang++ ../testing/run-tests.cpp -std=c++17 -lyaml-cpp \
              -I${{ github.workspace }}/vcpkg/installed/x64-osx/include \
              -L${{ github.workspace }}/vcpkg/installed/x64-osx/lib -o run-tests
          else
            echo "Compiling with GCC (Linux)..."
            g++ ../testing/run-tests.cpp -std=c++17 \
              -I${{ github.workspace }}/vcpkg/installed/x64-linux/include \
              -L${{ github.workspace }}/vcpkg/installed/x64-linux/lib \
              -lyaml-cpp -o run-tests
          fi

      - name: Run tests
        shell: bash
        run: |
          cd build
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            ./run-tests.exe
          else
            ./run-tests
          fi
